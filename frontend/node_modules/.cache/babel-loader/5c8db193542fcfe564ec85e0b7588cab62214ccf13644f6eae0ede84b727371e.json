{"ast":null,"code":"var _jsxFileName = \"C:\\\\C219\\\\mern-workout-app-starter-main\\\\frontend\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\n\n// Define the different moods based on the number of completed days\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getMood = completedDaysCount => {\n  if (completedDaysCount === 7) return '😁'; // All days completed\n  if (completedDaysCount >= 4) return '😊'; // More than half completed\n  if (completedDaysCount > 0) return '😐'; // Some days completed\n  return '😞'; // No days completed\n};\nconst Navbar = () => {\n  _s();\n  // State to track which days are marked as done\n  const [completedDays, setCompletedDays] = useState([]);\n\n  // Function to handle day click (toggle completion)\n  const handleDayClick = day => {\n    setCompletedDays(prev => prev.includes(day) ? prev.filter(d => d !== day) : [...prev, day]);\n  };\n\n  // Get the mood based on the completed days\n  const mood = getMood(completedDays.length);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Workout Buddy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"week-days\",\n        children: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `day-circle ${completedDays.includes(day) ? 'completed' : ''}`,\n          onClick: () => handleDayClick(day),\n          children: day\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mood-container\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mood-face\",\n          children: mood\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"y4/N0gEMbjnGzhqXrUGgVYB0OMc=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["Link","useState","jsxDEV","_jsxDEV","getMood","completedDaysCount","Navbar","_s","completedDays","setCompletedDays","handleDayClick","day","prev","includes","filter","d","mood","length","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/C219/mern-workout-app-starter-main/frontend/src/components/Navbar.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useState } from 'react';\n\n// Define the different moods based on the number of completed days\nconst getMood = (completedDaysCount) => {\n  if (completedDaysCount === 7) return '😁'; // All days completed\n  if (completedDaysCount >= 4) return '😊'; // More than half completed\n  if (completedDaysCount > 0) return '😐'; // Some days completed\n  return '😞'; // No days completed\n};\n\nconst Navbar = () => {\n  // State to track which days are marked as done\n  const [completedDays, setCompletedDays] = useState([]);\n\n  // Function to handle day click (toggle completion)\n  const handleDayClick = (day) => {\n    setCompletedDays((prev) =>\n      prev.includes(day) ? prev.filter((d) => d !== day) : [...prev, day]\n    );\n  };\n\n  // Get the mood based on the completed days\n  const mood = getMood(completedDays.length);\n\n  return (\n    <header>\n      <div className=\"container\">\n        <Link to=\"/\">\n          <h1>Workout Buddy</h1>\n        </Link>\n\n        <div className=\"week-days\">\n          {['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day, index) => (\n            <div\n              key={index}\n              className={`day-circle ${completedDays.includes(day) ? 'completed' : ''}`}\n              onClick={() => handleDayClick(day)}\n            >\n              {day}\n            </div>\n          ))}\n        </div>\n\n        {/* Mood face on the right side */}\n        <div className=\"mood-container\">\n          <span className=\"mood-face\">{mood}</span>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAIC,kBAAkB,IAAK;EACtC,IAAIA,kBAAkB,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC;EAC3C,IAAIA,kBAAkB,IAAI,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC;EAC1C,IAAIA,kBAAkB,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC;EACzC,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMS,cAAc,GAAIC,GAAG,IAAK;IAC9BF,gBAAgB,CAAEG,IAAI,IACpBA,IAAI,CAACC,QAAQ,CAACF,GAAG,CAAC,GAAGC,IAAI,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,GAAG,CAAC,GAAG,CAAC,GAAGC,IAAI,EAAED,GAAG,CACpE,CAAC;EACH,CAAC;;EAED;EACA,MAAMK,IAAI,GAAGZ,OAAO,CAACI,aAAa,CAACS,MAAM,CAAC;EAE1C,oBACEd,OAAA;IAAAe,QAAA,eACEf,OAAA;MAAKgB,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBf,OAAA,CAACH,IAAI;QAACoB,EAAE,EAAC,GAAG;QAAAF,QAAA,eACVf,OAAA;UAAAe,QAAA,EAAI;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eAEPrB,OAAA;QAAKgB,SAAS,EAAC,WAAW;QAAAD,QAAA,EACvB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAACO,GAAG,CAAC,CAACd,GAAG,EAAEe,KAAK,kBAChEvB,OAAA;UAEEgB,SAAS,EAAE,cAAcX,aAAa,CAACK,QAAQ,CAACF,GAAG,CAAC,GAAG,WAAW,GAAG,EAAE,EAAG;UAC1EgB,OAAO,EAAEA,CAAA,KAAMjB,cAAc,CAACC,GAAG,CAAE;UAAAO,QAAA,EAElCP;QAAG,GAJCe,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNrB,OAAA;QAAKgB,SAAS,EAAC,gBAAgB;QAAAD,QAAA,eAC7Bf,OAAA;UAAMgB,SAAS,EAAC,WAAW;UAAAD,QAAA,EAAEF;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACjB,EAAA,CAxCID,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AA0CZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}